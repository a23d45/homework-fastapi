version: "3.7"

services:
  db:
    image: postgres:15.1-alpine
    container_name: db_app
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d homework"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - 5432:5432
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  redis:
    image: redis:7.0-alpine
    container_name: redis_app
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - 6379:6379
    restart: always

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi_app
    env_file:
      - .env
    command: >
      sh -c "alembic upgrade head
             cd src
             uvicorn main:app --host 0.0.0.0 --port 8000"
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  rabbitmq:
    container_name: rabbitmq_app
    image: "rabbitmq:3-alpine"
    env_file:
      - .env
    ports:
      - 5672:5672

  worker:
    build:
      context: .
    env_file:
      - .env
    container_name: worker_app
    command: >
      sh -c "cd src
             celery -A menu_app.tasks.tasks:celery worker -l info -P gevent"
    depends_on:
      - rabbitmq
    volumes:
      - /app/admin/:/app/admin/

  beat:
    build:
      context: .
    env_file:
      - .env
    container_name: beat_app
    command: >
      sh -c "cd src
             celery -A menu_app.tasks.tasks:celery beat -l info"
    depends_on:
      - rabbitmq
      - worker
    volumes:
      - /app/admin/:/app/admin/

volumes:
  postgres_data:
